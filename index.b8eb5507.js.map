{"mappings":"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","sources":["src/index.js","src/js/local-storage-service.js","src/js/createMarkup.js","src/js/team-data.js","src/js/render-team-card.js","src/js/film-modal-markup.js","src/js/film-modal.js","src/js/get-genres.js","src/js/paginationBtnWorks.js"],"sourcesContent":["import FilmsApiService from './js/fetch-api';\nimport { cardMurkup } from './js/cardMurkup';\nimport pagination from './js/pagination';\nimport { createHomeCardsMarkup } from './js/createMarkup';\nimport './js/footerModal';\nimport './js/team-data';\nimport './js/render-team-card';\nimport './js/spinner';\nimport './js/film-modal';\nimport './js/get-genres';\n\n\nconst filmsApi = new FilmsApiService();\n\nconst refs = {\n    searchForm: document.querySelector('.header-form'),\n    searchButton: document.querySelector('.header-form__btn'),\n    filmCard: document.querySelector('.gallery'),\n    gallery: document.querySelector('.gallery__list'),\n}\n\n\nimport './js/paginationBtnWorks';\n// refs.searchForm.addEventListener('submit', onSearch);\n\nfilmsApi.fetchTrendingFilms().then(response => {\n  renderHomeGallery(response.results);\n});\n\nfunction renderHomeGallery(markup) {\n  refs.gallery.innerHTML = createHomeCardsMarkup(markup);\n}\n\nfilmsApi.fetchTrendingFilms().then(r => {\n  console.log(r);\n  const page = r.page;\n  const totalPages = r.total_pages;\n\n  renderHomeGallery(r.results);\n  pagination(totalPages, page);\n});\n\nconst ulTag = document.querySelector('.pagination ul');\n\nulTag.addEventListener('click', onClick);\n\nfunction onClick(evt) {\n  refs.gallery.innerHTML = '';\n  console.log(evt.target);\n\n  if (evt.target === document.querySelector('.arrow-left')) {\n    filmsApi.pageDecrement();\n    filmsApi.fetchTrendingFilms().then(r => {\n      console.log(r);\n      const page = r.page;\n      const totalPages = r.total_pages;\n\n      console.log(evt.target);\n      renderHomeGallery(r.results);\n      pagination(totalPages, page);\n      console.log(Number(document.querySelector('.numb').textContent));\n    });\n  }\n\n  const allNumbes = document.querySelectorAll('.numb');\n  for (const number of allNumbes) {\n    if (evt.target === number) {\n      filmsApi.setPage(Number(evt.target.textContent));\n      filmsApi.fetchTrendingFilms().then(r => {\n        console.log(r);\n        const page = r.page;\n        const totalPages = r.total_pages;\n\n        console.log(evt.target);\n        renderHomeGallery(r.results);\n        pagination(totalPages, page);\n      });\n    }\n  }\n\n  if (evt.target === document.querySelector('.arrow-right')) {\n    filmsApi.pageIncrement();\n    filmsApi.fetchTrendingFilms().then(r => {\n      console.log(r);\n      const page = r.page;\n      const totalPages = r.total_pages;\n\n      renderHomeGallery(r.results);\n      pagination(totalPages, page);\n    });\n  }\n}\n","const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error(\"Set state error: \", error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n     console.error(\"Get state error: \", error.message);\n  }\n};\n\nexport {\n  save,\n  load,\n};","import { save, load } from './local-storage-service';\nconst LOCALSTORAGE_KEY = \"genres\";\nconst genres = load(LOCALSTORAGE_KEY);\n// console.log(genres);\n\nexport function createHomeCardsMarkup(movies) {\n    return movies.map(({ genre_ids, id, title, poster_path, release_date, vote_average }) => {\n        \n        const imgUrl = poster_path\n        ? `https://image.tmdb.org/t/p/w500${poster_path}`\n        : 'https://via.placeholder.com/150/360505/FFFFFF/?Text=No-poster';\n      \n\t\t\tlet movieGenre = \"\";\n\t\t\t\n\t\t\t// for (const genre of genres) {\n\t\t\t// \tif (genre_ids.includes(genre.id)) {\n\t\t\t// \t\tmovieGenre = g.name;\n\t\t\t// \t}\n\t\t\t// }\n\n\t\t\t// let res = genres.map(genre => return genre_ids.includes(genres.name));\n        return `\n        <li class=\"gallery__item\">\n                <img class=\"gallery__image\" src=\"${imgUrl}\" alt=\"Movie poster of ${title}\" loading=\"lazy\" data-id=\"${id}\"/>\n                <div class=\"info\">\n                    <h2 class=\"info-title\">${title}</h2>\n\t\t\t\t\t\t\t\t\t\t<p class=\"info-meta\">${genre_ids.slice(0, 2)} | ${release_date.slice(0, 4)}<span class=\"info-rate\">${vote_average.toFixed(2)}</span></p>\n                </div>\n        </li>`\n    }).join('');\n};","export {teamDAta}\n\nconst teamDAta = [\n    {\n    img: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/3a/Cat03.jpg/1200px-Cat03.jpg',\n    alt: \"кто-то тут есть\",\n  \n    name: 'Maksym Kidanov',\n    pos: \"Developer\",\n\n    git: 'https://github.com/Eldiwr',\n    linked: 'https://www.linkedin.com/in/maksym-kidanov-53b08b21a/',\n    insta: 'https://www.instagram.com/eldiwr/',\n    },\n\n    {\n    img: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/3a/Cat03.jpg/1200px-Cat03.jpg',\n    alt: \"кто-то тут есть\",\n  \n    name: 'Maksym Kidanov',\n    pos: \"Developer\",\n\n    git: 'https://github.com/Eldiwr',\n    linked: 'https://www.linkedin.com/in/maksym-kidanov-53b08b21a/',\n    insta: 'https://www.instagram.com/eldiwr/',\n    },\n\n    {\n    img: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/3a/Cat03.jpg/1200px-Cat03.jpg',\n    alt: \"кто-то тут есть\",\n  \n    name: 'Maksym Kidanov',\n    pos: \"Developer\",\n\n    git: 'https://github.com/Eldiwr',\n    linked: 'https://www.linkedin.com/in/maksym-kidanov-53b08b21a/',\n    insta: 'https://www.instagram.com/eldiwr/',\n    },\n\n    {\n    img: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/3a/Cat03.jpg/1200px-Cat03.jpg',\n    alt: \"кто-то тут есть\",\n  \n    name: 'Maksym Kidanov',\n    pos: \"Developer\",\n\n    git: 'https://github.com/Eldiwr',\n    linked: 'https://www.linkedin.com/in/maksym-kidanov-53b08b21a/',\n    insta: 'https://www.instagram.com/eldiwr/',\n},\n    \n]","import { teamDAta } from \"./team-data\";\n\nconst memberCard = document.querySelector('.team__list');\n\nconst cardOfMemberRender = teamDAta.map(({ img, alt, name, pos, git, linked, insta }) => {\n    return`<li class=\"team__item\">                          \n                <img src=\"${img}\" alt=\"${alt}\" width = 260> \n\n                <div class=\"team-div\">\n                    <h3 class=\"team-div__employee\">${name}</h3>\n                    <p class=\"team-div__position\">${pos}</p>\n                    <ul class=\"team-div__list\">                \n                        <li class=\"team-div__item\">\n                            <a class=\"team-div__link\" href=\"${insta}\">\n                                <svg class=\"team-div__icon\" width=\"20\" height=\"20\"> \n                                    <use href=\"/src/images/social-icons.svg#icon-instagram\"></use> \n                                </svg>\n                            </a>\n                        </li>\n                        <li class=\"team-div__item\">\n                            <a class=\"team-div__link\" href=\"${git}\">\n                                <svg class=\"team-div__icon\" width=\"20\" height=\"20\"> \n                                    <use href=\"/src/images/social-icons.svg#icon-linkedin\"></use> \n                                </svg>\n                            </a>\n                        </li>\n                        <li class=\"team-div__item\">\n                            <a class=\"team-div__link\" href=\"${linked}\">\n                                <svg class=\"team-div__icon\" width=\"20\" height=\"20\"> \n                                    <use href=\"/src/images/social-icons.svg#icon-git\"></use> \n                                </svg>\n                            </a>\n                        </li>                                  \n                    </ul>\n                </div>\n            </li>`\n}).join('');\n\nmemberCard.insertAdjacentHTML('beforeend', cardOfMemberRender);\n\n","export function filmModalMarkup({poster_path, title, vote_average, vote_count, popularity, original_title, listOfGenders, overview, id}) {\n    return `\n    <div class=\"modal\" data-modal-id=\"${id}\">\n        <div class=\"modal__poster\">\n            <img\n                class=\"modal__img\"\n                src=\"https://image.tmdb.org/t/p/w500${poster_path}\"\n                alt=\"${title}\"\n                />\n        </div>\n    \n        <div class=\"modal__content\">\n            <h2 class=\"modal__content-title\">${title}</h2>\n            <table class=\"modal__content-info\">\n                <tr>\n                    <td class=\"modal__content-name\">Vote / Votes</td>\n                    <td class=\"modal__content-name-value\">\n                        <span class=\"modal__content-rate\">${vote_average}</span>\n                        /\n                        <span class=\"modal__content-rates\">${vote_count}</span>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"modal__content-name\">Popularity</td>\n                    <td class=\"modal__content-name-value\">${popularity}</td>\n                </tr>\n                <tr>\n                    <td class=\"modal__content-name\">Original Title</td>\n                    <td class=\"modal__content-name-value--title\">${original_title}</td>\n                </tr>\n                <tr>\n                    <td class=\"modal__content-name\">Genre</td>\n                    <td class=\"modal__content-name-value\">${listOfGenders}</td>\n                </tr>\n            </table>\n        \n            <div class=\"modal__about\">\n                <h3 class=\"modal__about-title\">About</h3>\n                <p class=\"modal__about-description\">${overview}</p>\n            </div>\n        \n            <div class=\"modal__btns\">\n                <button class=\"modal__btn add-to-watched\" type=\"button\" data-modal-action=\"${id}\">\n                Add to watched\n                </button>\n                <button class=\"modal__btn add-to-queue\" type=\"button\" data-modal-action=\"${id}\">\n                Add to queue\n                </button>\n                <!-- <button  type=\"button\" class=\"modal__btn player\" data-player-action=\"${id}\">watch the trailer</button>  -->\n\n            </div>\n            <button class=\"modal__close\" type=\"button\" data-modal-close aria-label=\"close-modal\">\n                <svg class=\"modal__close-svg\" width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M8 8L22 22\" stroke=\"black\" stroke-width=\"2\"/>\n                    <path d=\"M8 22L22 8\" stroke=\"black\" stroke-width=\"2\"/>\n                </svg>\n            </button>\n        </div>\n    </div>\n    `\n}","import FilmsApiService from \"./fetch-api\";\nimport { filmModalMarkup } from \"./film-modal-markup\";\n\nconst filmsApiService = new FilmsApiService();\nlet id = null;\nlet markup = \"\";\n\nconst refs = {\n    gallery: document.querySelector(\".gallery\"),\n    backdrop: document.querySelector(\".modal-backdrop\"),\n    closeFilmModalBtn: \"\",\n    addToWatched: \"\",\n    addToQueue: \"\",\n}\n\nrefs.gallery.addEventListener('click', onOpenFilmModal);\n\nfunction onOpenFilmModal(e) {\n    e.preventDefault();\n    id = e.target.dataset.id;\n    getFilmModal(id);\n        \n    if (e.target.nodeName !== 'IMG') {\n      return;\n    }\n    \n    toggleModal();\n}\n\nconst getFilmModal = async (filmID) => {\n    \n    try {\n        const data = await filmsApiService.fetchFilmById(filmID);\n        const listOfGenders = await data.genres.map(genre => genre.name).join(', ');\n        const filmData = {...data, listOfGenders};\n        // console.log(filmData);\n        markup = filmModalMarkup(filmData);\n        refs.backdrop.innerHTML = markup;\n        getRefsOfBtns();\n        refs.closeFilmModalBtn.addEventListener('click', onCloseFilmModal);\n        refs.backdrop.addEventListener('click', onBackdropClose);\n        window.addEventListener('keydown', onEscapeClose);\n        return refs.backdrop;\n    }\n\n    catch (error) {\n        console.log(error.message);\n    }\n}\n\nfunction getRefsOfBtns() {\n    refs.closeFilmModalBtn = document.querySelector(\".modal__close\");\n    refs.addToWatched = document.querySelector(\".add-to-watched\");\n    refs.addToQueue = document.querySelector(\".add-to-queue\");\n    return refs;\n}\n\nfunction onCloseFilmModal(e) {\n    e.preventDefault();\n    toggleModal();\n    refs.backdrop.innerHTML = \"\";\n    console.log(refs.backdrop);\n    removeAllEventListeners();\n}\n\nfunction onEscapeClose(e) {\n    e.preventDefault();\n    if (e.code === 'Escape') {\n        toggleModal();\n        refs.backdrop.innerHTML = \"\";\n        removeAllEventListeners();\n    }\n}\n\nfunction onBackdropClose(e) {\n    e.preventDefault();\n    if (e.currentTarget === e.target) {\n        toggleModal();\n        refs.backdrop.innerHTML = \"\";\n        removeAllEventListeners();\n    }\n}\n\nfunction toggleModal() {\n    refs.backdrop.classList.toggle(\"is-hidden\");\n}\n\nfunction removeAllEventListeners() {\n    refs.closeFilmModalBtn.removeEventListener('click', onCloseFilmModal);\n    window.removeEventListener('keydown', onEscapeClose);\n    refs.backdrop.removeEventListener('click', onBackdropClose);\n}\n","import FilmsApiService from './fetch-api';\nimport { save, load } from './local-storage-service';\n\nconst LOCALSTORAGE_KEY = \"genres\";\nconst filmsApi = new FilmsApiService();\n\nfilmsApi.fetchGenres().then(response => {\n    save(LOCALSTORAGE_KEY, response);    \n}\n);","const ulTag = document.querySelector('.pagination ul');\n\nulTag.addEventListener('click', onClick);\n\nfunction onClick(evt) {\n  refs.gallery.innerHTML = '';\n  console.log(evt.target);\n\n  if (evt.target === document.querySelector('.arrow-left')) {\n    filmsApi.pageDecrement();\n    filmsApi.fetchTrendingFilms().then(r => {\n      console.log(r);\n      const page = r.page;\n      const totalPages = r.total_pages;\n\n      console.log(evt.target);\n      renderHomeGallery(r.results);\n      pagination(totalPages, page);\n      console.log(Number(document.querySelector('.numb').textContent));\n    });\n  }\n\n  const allNumbes = document.querySelectorAll('.numb');\n  for (const number of allNumbes) {\n    if (evt.target === number) {\n      filmsApi.setPage(Number(evt.target.textContent));\n      filmsApi.fetchTrendingFilms().then(r => {\n        console.log(r);\n        const page = r.page;\n        const totalPages = r.total_pages;\n\n        console.log(evt.target);\n        renderHomeGallery(r.results);\n        pagination(totalPages, page);\n      });\n    }\n  }\n\n  if (evt.target === document.querySelector('.arrow-right')) {\n    filmsApi.pageIncrement();\n    filmsApi.fetchTrendingFilms().then(r => {\n      console.log(r);\n      const page = r.page;\n      const totalPages = r.total_pages;\n\n      renderHomeGallery(r.results);\n      pagination(totalPages, page);\n    });\n  }\n}\n"],"names":["$i3bGI","parcelRequire","$827aa3d37bcd30de$export$a1544dad697b423d","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","getItem","parse","$4f0b89941edddb30$var$memberCard","document","querySelector","$4f0b89941edddb30$var$cardOfMemberRender","img","alt","name","pos","git","linked","insta","map","join","$3cd49a43a7b7d676$export$e4b40dc91df08b3d","poster_path","title","vote_average","vote_count","popularity","original_title","listOfGenders","overview","id","insertAdjacentHTML","$2ef99d0c918e6f7e$var$filmsApiService","default","$2ef99d0c918e6f7e$var$id","$2ef99d0c918e6f7e$var$markup","$2ef99d0c918e6f7e$var$refs","gallery","backdrop","closeFilmModalBtn","addToWatched","addToQueue","addEventListener","e","preventDefault","target","dataset","$2ef99d0c918e6f7e$var$getFilmModal","nodeName","$2ef99d0c918e6f7e$var$toggleModal","async","filmID","data","fetchFilmById","genres","genre","filmData","innerHTML","$2ef99d0c918e6f7e$var$onCloseFilmModal","$2ef99d0c918e6f7e$var$onBackdropClose","window","$2ef99d0c918e6f7e$var$onEscapeClose","log","$2ef99d0c918e6f7e$var$removeAllEventListeners","code","currentTarget","classList","toggle","removeEventListener","fetchGenres","then","response","evt","refs","filmsApi","pageDecrement","fetchTrendingFilms","r","page","totalPages","total_pages","renderHomeGallery","results","pagination","Number","textContent","allNumbes","querySelectorAll","number","setPage","pageIncrement","$1f0dc3b9307be026$var$filmsApi","$1f0dc3b9307be026$var$refs","searchForm","searchButton","filmCard","$1f0dc3b9307be026$var$renderHomeGallery","markup","genre_ids","release_date","slice","toFixed","$2nhTy"],"version":3,"file":"index.b8eb5507.js.map"}